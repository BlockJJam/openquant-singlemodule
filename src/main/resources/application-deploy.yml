# Server resource config
server:
  port: 8081
  error:
    whitelabel:
      enabled: false #스프링에서 기본적으로 제공하는 에러페이지를 보여주겠다
    include-exception: true # 응답에 exception의 내용을 포함할지 설정
    include-message: always # messages.properties에서 해당 에러 메시지를 바인딩해주겠다 -> @ResponseStatus(.... reason="error.bad")의 reason이 있어야함
  shutdown: graceful


spring:
  # Datasource config
  datasource:
    driver-class-name: org.postgresql.Driver
    url: {DATABASE_DEPLOY_URL}
    username: {DATABASE_DEPLOY_ID}
    password: {DATABASE_DEPLOY_PWD}
    hikari:
      maximum-pool-size: 10
      idle-timeout: 600000
      max-lifetime: 180000 # 1000 * 60 * 30분
  # JPA config
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        temp:
          use_jdbc_metadata_defaults: false # postgreJDBC Driver 사용가능하고, hibernate dialect 선언도 할 필요 X
        show-sql: true
        format_sql: true
        default_batch_fetch_size: 100
        order_by:
          default_null_ordering: last # sql query에서 order by {} desc nulls last의 "nulls last"설정을 대신해주는 설정
    hibernate:
      ddl-auto: none
  # dev tools( compile 자동화 ) config
  devtools:
    livereload:
      enabled: true
    restart:
      enabled: true
  cache:
    jcache:
      config: classpath:ehcache.xml
  #profile setting
  profiles:
    active: {APPLICATION_YAML_PATH}
  #Redis
#  redis:
#    host: localhost
#    port: 6379

# Logging tool( log4j2 ) config
logging:
  config: classpath:log4j2-deploy.yml

# JWT config
jwt:
  header: Authorization
  # this is test in open quant jwt, we need to handle jwt header data -> encode 하기 전 데이터 정보
  secret: dGhpcyBpcyB0ZXN0IGluIG9wZW4gcXVhbnQgand0LCB3ZSBuZWVkIHRvIGhhbmRsZSBqd3QgaGVhZGVyIGRhdGE=
  token-validity-in-seconds: 86400000 # 24 hours

tomcat:
  ajp:
    protocol: AJP/1.3
    port: 8002
    enabled: true




